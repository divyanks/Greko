#pragma once
#include "ntddk.h"
#include <mountdev.h>

extern DRIVER_INITIALIZE DriverEntry;
typedef struct _VOL_INFO
{
	WCHAR  wDriveLetter;
	WCHAR  wGUID[37];
	ATDR_BITMAP *atdr_bitmap;
	BOOLEAN atdr_tracking_enabled;
}VOL_INFO, *PVOL_INFO;

typedef struct _DEVICE_EXTENSION
{
	PDEVICE_OBJECT pdo;
	PDEVICE_OBJECT fdo;
	PDEVICE_OBJECT LowerDeviceObject;
	PKEVENT        PagingPathCountEvent;
	PVOL_INFO      VolInfo;
}DEVICE_EXTENSION, *PDEVICE_EXTENSION;

UINT32 atdr_find_pos(ATDR_BITMAP *bitmap, sector_t addr);
void atdr_set_bits(PATDR_BITMAP bitmap, int first, int last);
NTSTATUS atdrFltShutdownFlush(IN PDEVICE_OBJECT DeviceObject,	IN PIRP Irp);
NTSTATUS atdrFltWrite(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltDeviceControl(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltStartDevice(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltIrpCompletion(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp, IN PVOID Context);
NTSTATUS atdrFltRemoveDevice(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltAddDevice(PDRIVER_OBJECT DriverObject, PDEVICE_OBJECT pdo);
NTSTATUS atdrFltSendToNextDriver(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltForwardIrpSynchronous(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltDispatchPnp(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltDispatchPower(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS atdrFltShutdown(PDEVICE_OBJECT DeviceObject, PIRP Irp);

void atdrFltUnload(IN PDRIVER_OBJECT DriverObject);
VOID atdrFltSyncFilterWithTarget(IN PDEVICE_OBJECT FilterDevice, IN PDEVICE_OBJECT TargetDevice);

NTSTATUS MapBufferForUserModeUse(PVOL_INFO pVolInfo, PVOID * Address);

#define ATDR_DRIVER_NAME      L"atdrvolflt.sys"
#define ATDR_DEVICE_NAME      L"atdrvolflt"
#define ATDR_W32_DEVICE_NAME  L"\\\\.\\atdrvolflt"
#define ATDR_DOSDEVICE_NAME   L"\\DosDevices\\atdrvolflt"
#define ATDRDEVICECONTROLTYPE 0x9000
/*
              CTL_CODE(ATDRDEVICECONTROLTYPE, 0x900, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ATDRCTL_GET_USER                CTL_CODE(ATDRDEVICECONTROLTYPE, 0x901, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ATDRCTL_FLIP_BITMAP_AREA        CTL_CODE(ATDRDEVICECONTROLTYPE, 0x902, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ATDRCTL_CHECK_BITMAP            CTL_CODE(ATDRDEVICECONTROLTYPE, 0x903, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ATDRCTRL_DESTROY                CTL_CODE(ATDRDEVICECONTROLTYPE, 0x904, METHOD_BUFFERED, FILE_ANY_ACCESS)
*/


#define	ATDRCTL_DEV_CREATE        CTL_CODE(ATDRDEVICECONTROLTYPE, 0x900, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define	ATDRCTL_BLKDEV_CREATE     CTL_CODE(ATDRDEVICECONTROLTYPE, 0x901, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define	ATDRCTL_BLKDEV_ATTACH     CTL_CODE(ATDRDEVICECONTROLTYPE, 0x902, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define	ATDRCTL_BLKDEV_DESTROY    CTL_CODE(ATDRDEVICECONTROLTYPE, 0x903, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define	ATDRCTL_DEV_DESTROY       CTL_CODE(ATDRDEVICECONTROLTYPE, 0x904, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define ATDRCTL_MEMCTL_CREATE     CTL_CODE(ATDRDEVICECONTROLTYPE, 0x905, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ATDRCTL_SET_GRAIN_SIZE    CTL_CODE(ATDRDEVICECONTROLTYPE, 0x906, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define ATDRCTL_SET_BITMAP_SIZE   CTL_CODE(ATDRDEVICECONTROLTYPE, 0x907, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define	ATDR_FLIP_BITMAP_AREA     CTL_CODE(ATDRDEVICECONTROLTYPE, 0x908, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define ATDRCTL_GET_GRAIN_SIZE    CTL_CODE(ATDRDEVICECONTROLTYPE, 0x909, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define ATDRCTL_GET_USER          CTL_CODE(ATDRDEVICECONTROLTYPE, 0x910, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define	ATDRCTL_BLKDEV_SEARCH     CTL_CODE(ATDRDEVICECONTROLTYPE, 0x9011, METHOD_BUFFERED, FILE_ANY_ACCESS)

